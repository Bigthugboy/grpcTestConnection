// Code generated by protoc-gen-go-grpc. DO NOT EDIT.
// versions:
// - protoc-gen-go-grpc v1.4.0
// - protoc             v5.27.2
// source: payment.proto

package payment

import (
	context "context"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
)

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
// Requires gRPC-Go v1.62.0 or later.
const _ = grpc.SupportPackageIsVersion8

const (
	AddDebitAccountService_AddDebitAccount_FullMethodName = "/payment.AddDebitAccountService/AddDebitAccount"
)

// AddDebitAccountServiceClient is the client API for AddDebitAccountService service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://pkg.go.dev/google.golang.org/grpc/?tab=doc#ClientConn.NewStream.
type AddDebitAccountServiceClient interface {
	AddDebitAccount(ctx context.Context, in *AddDebitAccountRequest, opts ...grpc.CallOption) (*AddDebitAccountResponse, error)
}

type addDebitAccountServiceClient struct {
	cc grpc.ClientConnInterface
}

func NewAddDebitAccountServiceClient(cc grpc.ClientConnInterface) AddDebitAccountServiceClient {
	return &addDebitAccountServiceClient{cc}
}

func (c *addDebitAccountServiceClient) AddDebitAccount(ctx context.Context, in *AddDebitAccountRequest, opts ...grpc.CallOption) (*AddDebitAccountResponse, error) {
	cOpts := append([]grpc.CallOption{grpc.StaticMethod()}, opts...)
	out := new(AddDebitAccountResponse)
	err := c.cc.Invoke(ctx, AddDebitAccountService_AddDebitAccount_FullMethodName, in, out, cOpts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// AddDebitAccountServiceServer is the server API for AddDebitAccountService service.
// All implementations must embed UnimplementedAddDebitAccountServiceServer
// for forward compatibility
type AddDebitAccountServiceServer interface {
	AddDebitAccount(context.Context, *AddDebitAccountRequest) (*AddDebitAccountResponse, error)
	mustEmbedUnimplementedAddDebitAccountServiceServer()
}

// UnimplementedAddDebitAccountServiceServer must be embedded to have forward compatible implementations.
type UnimplementedAddDebitAccountServiceServer struct {
}

func (UnimplementedAddDebitAccountServiceServer) AddDebitAccount(context.Context, *AddDebitAccountRequest) (*AddDebitAccountResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method AddDebitAccount not implemented")
}
func (UnimplementedAddDebitAccountServiceServer) mustEmbedUnimplementedAddDebitAccountServiceServer() {
}

// UnsafeAddDebitAccountServiceServer may be embedded to opt out of forward compatibility for this service.
// Use of this interface is not recommended, as added methods to AddDebitAccountServiceServer will
// result in compilation errors.
type UnsafeAddDebitAccountServiceServer interface {
	mustEmbedUnimplementedAddDebitAccountServiceServer()
}

func RegisterAddDebitAccountServiceServer(s grpc.ServiceRegistrar, srv AddDebitAccountServiceServer) {
	s.RegisterService(&AddDebitAccountService_ServiceDesc, srv)
}

func _AddDebitAccountService_AddDebitAccount_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(AddDebitAccountRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(AddDebitAccountServiceServer).AddDebitAccount(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: AddDebitAccountService_AddDebitAccount_FullMethodName,
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(AddDebitAccountServiceServer).AddDebitAccount(ctx, req.(*AddDebitAccountRequest))
	}
	return interceptor(ctx, in, info, handler)
}

// AddDebitAccountService_ServiceDesc is the grpc.ServiceDesc for AddDebitAccountService service.
// It's only intended for direct use with grpc.RegisterService,
// and not to be introspected or modified (even as a copy)
var AddDebitAccountService_ServiceDesc = grpc.ServiceDesc{
	ServiceName: "payment.AddDebitAccountService",
	HandlerType: (*AddDebitAccountServiceServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "AddDebitAccount",
			Handler:    _AddDebitAccountService_AddDebitAccount_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "payment.proto",
}
